-- MySQL dump 10.13  Distrib 8.0.38, for Win64 (x86_64)
--
-- Host: localhost    Database: techlingo
-- ------------------------------------------------------
-- Server version	8.0.39

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Dumping data for table `answers`
--

LOCK TABLES `answers` WRITE;
/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` VALUES (1,_binary '','Python foi criado no final da década de 1980 por Guido van Rossum','Guido van Rossum',1),(2,_binary '\0','Python foi criado no final da década de 1980 por Guido van Rossum','Linus Torvalds',1),(3,_binary '\0','Python foi criado no final da década de 1980 por Guido van Rossum','James Gosling',1),(4,_binary '','Python é uma linguagem de programação de alto nível, conhecida por sua sintaxe simples e intuitiva, que facilita o aprendizado para iniciantes.','Linguagem de programação',2),(5,_binary '\0','Python é uma linguagem de programação de alto nível, conhecida por sua sintaxe simples e intuitiva, que facilita o aprendizado para iniciantes.','FrameWork Agil',2),(6,_binary '\0','Python é uma linguagem de programação de alto nível, conhecida por sua sintaxe simples e intuitiva, que facilita o aprendizado para iniciantes.','Uma ferramenta de Design',2),(7,_binary '\0','Python é amplamente utilizado em várias áreas, incluindo desenvolvimento web, análise de dados, inteligência artificial, aprendizado de máquina, automação de tarefas, e até no desenvolvimento de jogos.','Somente no desenvolvimento de aplicativos móveis.',3),(8,_binary '\0','Python é amplamente utilizado em várias áreas, incluindo desenvolvimento web, análise de dados, inteligência artificial, aprendizado de máquina, automação de tarefas, e até no desenvolvimento de jogos.','Apenas para criar sistemas operacionais.',3),(9,_binary '','Python é amplamente utilizado em várias áreas, incluindo desenvolvimento web, análise de dados, inteligência artificial, aprendizado de máquina, automação de tarefas, e até no desenvolvimento de jogos.','Desenvolvimento web, Análise de dados e IA.',3),(10,_binary '','Um algoritmo é uma lista de instruções ou um conjunto de passos que você segue para resolver um problema ou realizar uma tarefa','Um algoritmo é uma lista de instruções ou um conjunto de passos que você segue para resolver um problema ou realizar uma tarefa.',4),(11,_binary '\0','Um algoritmo é uma lista de instruções ou um conjunto de passos que você segue para resolver um problema ou realizar uma tarefa','Um algoritmo é uma receita de cozinha',4),(12,_binary '\0','Um algoritmo é uma lista de instruções ou um conjunto de passos que você segue para resolver um problema ou realizar uma tarefa','São dispositivos eletrônicos que processam dados e informações.',4),(13,_binary '\0','O comando \'se\' (ou if) é utilizado para tomar decisões no código. Ele avalia uma condição (como uma comparação ou estado de uma variável) e, se essa condição for verdadeira, executa o bloco de código associado. Caso contrário, o código é ignorado ou outro bloco de código pode ser executado.','Ele impede o programa de continuar a execução após a primeira linha.',5),(14,_binary '\0','O comando \'se\' (ou if) é utilizado para tomar decisões no código. Ele avalia uma condição (como uma comparação ou estado de uma variável) e, se essa condição for verdadeira, executa o bloco de código associado. Caso contrário, o código é ignorado ou outro bloco de código pode ser executado.','Ele executa uma ação repetidamente até que uma condição se torne falsa.',5),(15,_binary '','O comando \'se\' (ou if) é utilizado para tomar decisões no código. Ele avalia uma condição (como uma comparação ou estado de uma variável) e, se essa condição for verdadeira, executa o bloco de código associado. Caso contrário, o código é ignorado ou outro bloco de código pode ser executado.','Ele verifica se uma condição é verdadeira e, se for, executa uma ação.',5),(16,_binary '\0','O comando \'enquanto\' (ou while) instrui o computador a continuar realizando uma ação enquanto uma condição for verdadeira, como exemplificado pelo robô que continua colocando maçãs na cesta \'enquanto houver maçãs na mesa\'. Assim, o loop continua até que a condição pare de ser verdadeira, o que encerra a repetição.','Ele para o programa imediatamente ao encontrar uma condição falsa.',6),(17,_binary '','O comando \'enquanto\' (ou while) instrui o computador a continuar realizando uma ação enquanto uma condição for verdadeira, como exemplificado pelo robô que continua colocando maçãs na cesta \'enquanto houver maçãs na mesa\'. Assim, o loop continua até que a condição pare de ser verdadeira, o que encerra a repetição.','Ele executa uma ação repetidamente enquanto uma condição for verdadeira.',6),(18,_binary '\0','O comando \'enquanto\' (ou while) instrui o computador a continuar realizando uma ação enquanto uma condição for verdadeira, como exemplificado pelo robô que continua colocando maçãs na cesta \'enquanto houver maçãs na mesa\'. Assim, o loop continua até que a condição pare de ser verdadeira, o que encerra a repetição.','Ele executa uma ação apenas uma vez, independentemente da condição.',6),(19,_binary '','As variáveis podem ser alteradas durante a execução do programa','As variáveis podem ser alteradas durante a execução do programa.',7),(20,_binary '\0','As variáveis podem ser alteradas durante a execução do programa','As variáveis não podem conter textos.',7),(21,_binary '\0','As variáveis podem ser alteradas durante a execução do programa','As variáveis sempre armazenam valores inteiros.',7),(22,_binary '\0','O operador aritmético usado para calcular o resto de uma divisão é `%` ','*',8),(23,_binary '\0','O operador aritmético usado para calcular o resto de uma divisão é `%` ','/',8),(24,_binary '','O operador aritmético usado para calcular o resto de uma divisão é `%` ','%',8),(25,_binary '\0','O operador \'&&\' (E lógico) retorna verdadeiro apenas quando ambos os operandos são verdadeiros. Se qualquer um for falso, o resultado será falso. É utilizado para combinar condições que precisam ser verdadeiras ao mesmo tempo.','||',9),(26,_binary '','O operador \'&&\' (E lógico) retorna verdadeiro apenas quando ambos os operandos são verdadeiros. Se qualquer um for falso, o resultado será falso. É utilizado para combinar condições que precisam ser verdadeiras ao mesmo tempo.','&&',9),(27,_binary '\0','O operador \'&&\' (E lógico) retorna verdadeiro apenas quando ambos os operandos são verdadeiros. Se qualquer um for falso, o resultado será falso. É utilizado para combinar condições que precisam ser verdadeiras ao mesmo tempo.','!',9),(28,_binary '\0','A estrutura if/else é a principal usada para verificar condições e tomar decisões com base em diferentes cenários. O while e o for são usados para repetição, não para decisões.','while',10),(29,_binary '','A estrutura if/else é a principal usada para verificar condições e tomar decisões com base em diferentes cenários. O while e o for são usados para repetição, não para decisões.','if/else',10),(30,_binary '\0','A estrutura if/else é a principal usada para verificar condições e tomar decisões com base em diferentes cenários. O while e o for são usados para repetição, não para decisões.','for',10),(31,_binary '\0','a linguagem foi inicialmente desenvolvida em apenas 10 dias e era chamada de \'Mocha\', sendo posteriormente renomeada para \'LiveScript\' antes de finalmente receber o nome de \'JavaScript\'.','Java',11),(32,_binary '\0','a linguagem foi inicialmente desenvolvida em apenas 10 dias e era chamada de \'Mocha\', sendo posteriormente renomeada para \'LiveScript\' antes de finalmente receber o nome de \'JavaScript\'.','LiveScript',11),(33,_binary '','a linguagem foi inicialmente desenvolvida em apenas 10 dias e era chamada de \'Mocha\', sendo posteriormente renomeada para \'LiveScript\' antes de finalmente receber o nome de \'JavaScript\'.','Mocha',11),(34,_binary '','JavaScript é uma linguagem versátil amplamente utilizada para o desenvolvimento de sites e aplicações web interativas.','Desenvolvimento de sites e aplicações web interativas.',12),(35,_binary '\0','JavaScript é uma linguagem versátil amplamente utilizada para o desenvolvimento de sites e aplicações web interativas.','Gerenciamento de bancos de dados SQL',12),(36,_binary '\0','JavaScript é uma linguagem versátil amplamente utilizada para o desenvolvimento de sites e aplicações web interativas.','Criação de estilos CSS',12),(37,_binary '','Variáveis são elementos fundamentais em programação que permitem armazenar dados e informações temporariamente. Elas atuam como \'caixas\' onde você pode guardar valores que podem ser utilizados e manipulados ao longo da execução do programa.','Armazenar dados temporariamente',13),(38,_binary '\0','Variáveis são elementos fundamentais em programação que permitem armazenar dados e informações temporariamente. Elas atuam como \'caixas\' onde você pode guardar valores que podem ser utilizados e manipulados ao longo da execução do programa.','Criar interfaces gráficas',13),(39,_binary '\0','Variáveis são elementos fundamentais em programação que permitem armazenar dados e informações temporariamente. Elas atuam como \'caixas\' onde você pode guardar valores que podem ser utilizados e manipulados ao longo da execução do programa.','Executar operações matemáticas',13),(40,_binary '\0','Os tipos de dados incluem Number (que representa inteiros e números decimais), String (sequências de caracteres) e Boolean (valores lógicos true ou false)','String',14),(41,_binary '','Os tipos de dados incluem Number (que representa inteiros e números decimais), String (sequências de caracteres) e Boolean (valores lógicos true ou false)','Decimal',14),(42,_binary '\0','Os tipos de dados incluem Number (que representa inteiros e números decimais), String (sequências de caracteres) e Boolean (valores lógicos true ou false)','Boolean',14),(43,_binary '\0','A palavra-chave const é usada para declarar constantes, que são variáveis cujo valor não pode ser alterado após a sua definição.','let',15),(44,_binary '','A palavra-chave const é usada para declarar constantes, que são variáveis cujo valor não pode ser alterado após a sua definição.','const',15),(45,_binary '\0','A palavra-chave const é usada para declarar constantes, que são variáveis cujo valor não pode ser alterado após a sua definição.','var',15),(46,_binary '\0','A estrutura if é usada para verificar se uma condição é verdadeira e, com base nisso, executar um bloco de código.','for',16),(47,_binary '','A estrutura if é usada para verificar se uma condição é verdadeira e, com base nisso, executar um bloco de código.','if',16),(48,_binary '\0','A estrutura if é usada para verificar se uma condição é verdadeira e, com base nisso, executar um bloco de código.','while',16),(49,_binary '\0','O laço for é ideal para quando sabemos antecipadamente o número de repetições necessárias','while',17),(50,_binary '','O laço for é ideal para quando sabemos antecipadamente o número de repetições necessárias','for',17),(51,_binary '\0','O laço for é ideal para quando sabemos antecipadamente o número de repetições necessárias','do...while',17),(52,_binary '\0','Funções permitem executar blocos de código quando chamadas e, opcionalmente, podem retornar valores com a palavra-chave return.','Repetir um bloco de código infinitamente',18),(53,_binary '\0','Funções permitem executar blocos de código quando chamadas e, opcionalmente, podem retornar valores com a palavra-chave return.','Armazenar valores',18),(54,_binary '','Funções permitem executar blocos de código quando chamadas e, opcionalmente, podem retornar valores com a palavra-chave return.','Executar um bloco de código e retornar um valor',18),(55,_binary '\0','Arrays em JavaScript podem armazenar qualquer tipo de dado, incluindo números, strings, objetos, funções e outros arrays.','Apenas números',19),(56,_binary '\0','Arrays em JavaScript podem armazenar qualquer tipo de dado, incluindo números, strings, objetos, funções e outros arrays.','Apenas strings',19),(57,_binary '','Arrays em JavaScript podem armazenar qualquer tipo de dado, incluindo números, strings, objetos, funções e outros arrays.','Múltiplos valores de diferentes tipos',19);
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `contents`
--

LOCK TABLES `contents` WRITE;
/*!40000 ALTER TABLE `contents` DISABLE KEYS */;
INSERT INTO `contents` VALUES (1,NULL,1,'Python foi criado no final da década de 1980 por Guido van Rossum, com o objetivo de ser uma linguagem de programação de fácil leitura e escrita. A primeira versão foi lançada em 1991. Desde então, Python passou por várias atualizações, cada uma trazendo melhorias significativas em termos de recursos, performance e usabilidade. O nome “Python” foi inspirado no grupo de comédia britânico Monty Python, refletindo o desejo de Van Rossum de que a linguagem fosse divertida de usar.','História do Python',1),(2,NULL,2,'Python é uma linguagem de programação de alto nível, conhecida por sua sintaxe simples e intuitiva, que facilita o aprendizado para iniciantes. Suas características incluem tipagem dinâmica, o que significa que você não precisa declarar o tipo de uma variável antes de usá-la, e um extenso conjunto de bibliotecas que permitem realizar diversas tarefas sem precisar escrever muito código do zero. Isso torna Python uma excelente escolha para prototipagem rápida e desenvolvimento ágil.','Principais Vantagens da Linguagem Python',1),(3,NULL,3,'Python é amplamente utilizado em várias áreas, incluindo desenvolvimento web, análise de dados, inteligência artificial, aprendizado de máquina, automação de tarefas, e até no desenvolvimento de jogos. Frameworks como Django e Flask facilitam a criação de aplicativos web, enquanto bibliotecas como Pandas e NumPy são essenciais para manipulação e análise de dados.','Aplicações Diversificadas do Python no Mercado',1),(4,NULL,1,'Um algoritmo é uma lista de instruções ou um conjunto de passos que você segue para resolver um problema ou realizar uma tarefa. Pense em um algoritmo como uma receita de cozinha: você tem que seguir os passos em uma ordem específica para que o resultado seja como esperado. Na programação, usamos algoritmos para fazer o computador resolver problemas de forma organizada e eficiente. Um exemplo simples de algoritmo seria: \"1. Pegue um copo, 2. Abra a torneira, 3. Encha o copo de água.\" Se você seguir esses passos na ordem certa, vai conseguir um copo cheio de água. Assim funciona um algoritmo!','Entendendo Algoritmos',2),(5,NULL,2,'Na programação, muitas vezes precisamos que o computador faça algo só em certas condições. Para isso, usamos o comando \"se\" (ou if, em inglês). O comando \"se\" funciona como na vida real: por exemplo, \"se estiver chovendo, pegue um guarda-chuva\". O computador só executa uma ação se a condição que você definir for verdadeira. Vamos dizer que você está programando um jogo e quer que o personagem só pule se o jogador apertar a barra de espaço. Nesse caso, você diria para o computador: \"se a barra de espaço for pressionada, faça o personagem pular\". Assim, o computador só faz o que você mandar se a condição do \"se\" for atendida.','Tomando Decisões com \"Se\"',2),(6,NULL,3,'Na programação, muitas vezes precisamos repetir uma ação várias vezes. É aqui que entra o comando \"enquanto\" (ou while, em inglês). Esse comando diz ao computador para continuar fazendo algo \"enquanto\" uma certa condição for verdadeira. Imagine que você está programando um robô para colocar maçãs em uma cesta. Você diria: \"enquanto houver maçãs na mesa, continue colocando maçãs na cesta\". O robô vai continuar fazendo isso até que não reste mais nenhuma maçã. Da mesma forma, o computador continua repetindo as instruções até que a condição definida pare de ser verdadeira.','Repetindo Tarefas com \"Enquanto\"',2),(7,NULL,1,'As variáveis são elementos fundamentais em programação, pois permitem armazenar e manipular informações de forma eficaz. Elas funcionam como etiquetas que referenciam valores, possibilitando que você utilize e modifique esses dados ao longo do tempo. Por exemplo, ao declarar uma variável chamada idade, você pode armazenar e alterar a idade de um usuário conforme necessário. Esse recurso é especialmente útil em aplicativos interativos, onde os dados do usuário podem mudar frequentemente. O uso de variáveis torna o código mais legível e facilita a compreensão do que cada parte do programa faz, ajudando na manutenção e atualização do código ao longo do tempo.','A Importância das Variáveis',3),(8,NULL,2,'Os tipos de dados são importantes em programação, pois definem a natureza das informações que podem ser armazenadas em variáveis. Os tipos comuns incluem números inteiros (integer), números de ponto flutuante (float), strings (sequências de caracteres) e booleanos (verdadeiro/falso). Compreender esses tipos é fundamental para realizar operações corretas e evitar erros. Por exemplo, se você quiser armazenar o nome de um usuário, deverá usar uma variável do tipo string. A escolha correta do tipo de dado também pode impactar o desempenho do seu programa, uma vez que alguns tipos exigem mais recursos do que outros.','Tipos de Dados Comuns',3),(9,'https://linguagemc.com.br/wp-content/uploads/2012/03/OperadoresAritmeticos.jpg',1,'Os operadores aritméticos são usados para realizar cálculos matemáticos em programação. Eles permitem somar, subtrair, multiplicar, dividir e calcular o resto de divisões entre números. Esses operadores são fundamentais para a manipulação de dados numéricos em qualquer linguagem de programação.  Os principais operadores aritméticos são:','Operadores Aritméticos',4),(10,'https://miro.medium.com/v2/resize:fit:1400/1*7fUl_76Kr7GQmZb8_POErg.jpeg',2,'Os operadores lógicos são utilizados para realizar comparações e determinar a relação entre valores booleanos (verdadeiro ou falso). Esses operadores são amplamente usados em estruturas de controle, como condicionais e loops, para tomar decisões com base em condições específicas. <br> Os principais operadores lógicos são:','Operadores Lógicos',4),(11,'https://www.hashtagtreinamentos.com/wp-content/uploads/2021/07/Estruturas-Condicionais-no-Python-3.png',1,'As estruturas condicionais permitem que o programa tome decisões com base em determinadas condições. O mais comum é o if/else, que avalia uma condição e executa um bloco de código se a condição for verdadeira, e outro bloco se for falsa. Isso permite ao programa se adaptar e reagir a diferentes situações.','Estruturas Condicionais',5),(12,NULL,1,'JavaScript é uma linguagem de programação interpretada e de script em alto nível, com tipagem dinâmica fraca e suporte a múltiplos paradigmas. Juntamente com HTML e CSS, é uma das três principais tecnologias da World Wide Web. Criado em 1995 por Brendan Eich na Netscape, inicialmente recebeu o nome de \"Mocha\", sendo renomeado para \"LiveScript\" e, finalmente, \"JavaScript\". A escolha do nome aproveitou a popularidade da linguagem Java, embora as duas sejam bastante diferentes. Em 1997, JavaScript foi padronizado como ECMAScript e, desde então, passou por várias atualizações significativas. Com o tempo, tornou-se uma das linguagens de programação mais populares, especialmente com a ascensão de frameworks e bibliotecas, como jQuery, Angular e React, que facilitaram o desenvolvimento de aplicações web interativas.','A História do JavaScript',6),(13,'https://dkrn4sk0rn31v.cloudfront.net/uploads/2018/03/01133925/javascript.png',2,'JavaScript é uma linguagem versátil amplamente utilizada para o desenvolvimento de sites e aplicações web interativas. Ela permite a manipulação do DOM para alterar conteúdo, estrutura e estilo de páginas em tempo real, possibilitando animações, validações de formulários e gráficos interativos. Além do front-end, JavaScript é utilizado no lado do servidor com Node.js, permitindo a construção de aplicações escaláveis. A linguagem também é aplicada no desenvolvimento de aplicativos móveis com React Native, jogos online e Internet das Coisas (IoT). Com o suporte de bibliotecas e frameworks como React, Angular e Vue.js, JavaScript se tornou essencial para criar experiências digitais modernas.','O que é possível fazer com Javascript e suas aplicações?',6),(14,NULL,1,'Variáveis são elementos fundamentais em programação que permitem armazenar dados e informações temporariamente. Elas atuam como \"caixas\" onde você pode guardar valores que podem ser utilizados e manipulados ao longo da execução do programa.','O que são variáveis?',7),(15,'https://i.imgur.com/mZk87I0.png',2,'As variáveis são fundamentais na programação, atuando como containers que armazenam dados referenciáveis e manipuláveis ao longo do código. Cada dado pode ser de um tipo diferente. Em JavaScript, os principais tipos de dados incluem: Number (números inteiros ou de ponto flutuante), String (sequências de caracteres definidas com aspas), Boolean (valores lógicos true ou false), Function (variáveis que podem ser funções), Object (conjunto de atributos associados), Array (coleção de valores indexados), Null (ausência intencional de valor) e Undefined (propriedade cujo valor não foi definido).','Tipos de Dados',7),(16,'https://media.licdn.com/dms/image/D4D12AQG5LAe6MjaSGg/article-cover_image-shrink_600_2000/0/1721188737640?e=2147483647&v=beta&t=jQh3G4jNyXKP2v2_VASnouPaXEOpoUYvEVMw0FWKjLk',3,'Em JavaScript, as variáveis são muito importantes porque servem para armazenar e manipular dados. Para declarar variáveis, usamos três palavras-chave principais: var, let e const. A palavra-chave var é usada para declarar variáveis que podem ser acessadas em qualquer parte de uma função ou em todo o script, ou seja, elas têm escopo global ou de função. Por outro lado, let é usada para declarar variáveis que são acessíveis apenas dentro do bloco onde foram definidas. Isso ajuda a evitar confusões que podem acontecer quando usamos var.  A palavra-chave const é utilizada para declarar constantes, que são variáveis cujo valor não pode ser mudado após serem definidas. Assim como let, const também tem escopo de bloco. É importante usar let e const em vez de var para garantir que o código seja mais seguro e fácil de entender.','Declaração de variáveis com JavaScript.',7),(17,'https://media.licdn.com/dms/image/v2/D4E22AQHVSsxWCaYVDA/feedshare-shrink_800/feedshare-shrink_800/0/1704713301030?e=2147483647&v=beta&t=GqcthDynqcWi2JbIYo21KeZeAdil3G-YqtKy_vz5O9o',1,'Em JavaScript, estruturas de controle permitem ao código tomar decisões com base em condições. A estrutura if é a mais comum e verifica se uma condição é verdadeira para executar um bloco de código. O else pode ser usado para fornecer uma alternativa caso a condição inicial seja falsa. Além disso, a estrutura else if pode ser adicionada para testar várias condições.','Tomando Decisões com Condicionais',8),(18,NULL,2,'Em JavaScript, podemos repetir ações usando laços, como o for, o while e o do...while. O laço for é usado quando sabemos o número de vezes que o código deve ser repetido, enquanto o while continua repetindo enquanto uma condição for verdadeira. O do...while é similar ao while, mas garante que o código seja executado ao menos uma vez antes de verificar a condição.','Repetindo Ações com Laços',8),(19,'https://diegomariano.com/wp-content/uploads/2022/07/interface-grafica-do-usuario-texto-aplicativo-d-5.png',1,'Em JavaScript, funções são blocos de código que podem ser definidos uma vez e reutilizados quantas vezes forem necessárias. Elas permitem organizar o código, facilitando a leitura e a manutenção. Uma função é declarada usando a palavra-chave function, seguida pelo nome da função, parênteses e um bloco de código entre chaves. Você pode passar valores para a função, chamados de \"parâmetros\", e a função pode retornar um valor usando a palavra-chave return. Além disso, JavaScript também suporta funções anônimas (sem nome) e funções armazenadas em variáveis, conhecidas como \"funções de expressão\".','O que são funções?',9),(20,'https://miro.medium.com/v2/resize:fit:760/1*vTUPcXzUEvh6CuyL3LXrqg.png',1,'Em JavaScript, arrays são estruturas de dados usadas para armazenar múltiplos valores em uma única variável. Um array pode conter qualquer tipo de dado, como números, strings, objetos e até outras funções. Para criar um array, utilizamos colchetes [] e colocamos os valores dentro deles, separados por vírgulas. Os itens dentro de um array são chamados de \"elementos\", e cada elemento possui um índice (posição), que começa em 0.','Arrays em JavaScript',10);
/*!40000 ALTER TABLE `contents` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `courses`
--

LOCK TABLES `courses` WRITE;
/*!40000 ALTER TABLE `courses` DISABLE KEYS */;
INSERT INTO `courses` VALUES (1,'Python','Aprenda Python para desenvolver rapidamente qualquer coisa, desde aplicações web até inteligência artificial.','https://www.tshirtgeek.com.br/wp-content/uploads/2021/03/com001.jpg'),(2,'Javascript','Curso de linguagem JavaScript, voltado para iniciantes e para quem quiser aprender mais sobre ECMAScript, a versão padronizada do JS.','https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSY1E-18eIRttk-SmvzS80BwoinsOVVQsaFqA&s');
/*!40000 ALTER TABLE `courses` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `enrollments`
--

LOCK TABLES `enrollments` WRITE;
/*!40000 ALTER TABLE `enrollments` DISABLE KEYS */;
INSERT INTO `enrollments` VALUES (1,0,1,'2024-10-02 15:51:25.979074',1,1),(2,0,0,'2024-10-04 18:46:38.149186',1,2),(3,0,2,'2024-10-08 18:08:25.512043',2,1);
/*!40000 ALTER TABLE `enrollments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `flyway_schema_history`
--

LOCK TABLES `flyway_schema_history` WRITE;
/*!40000 ALTER TABLE `flyway_schema_history` DISABLE KEYS */;
INSERT INTO `flyway_schema_history` VALUES (1,'1','create table courses','SQL','V1__create_table_courses.sql',-1052610113,'root','2024-10-01 19:02:02',83,1);
/*!40000 ALTER TABLE `flyway_schema_history` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `lessons`
--

LOCK TABLES `lessons` WRITE;
/*!40000 ALTER TABLE `lessons` DISABLE KEYS */;
INSERT INTO `lessons` VALUES (1,1,'Python: Uma Introdução Simples e Versátil','Aqui iremos aprender um pouco mais sobre o que é o Python e como funciona.',100,1),(2,1,'Pensando como um Computador','Aprendendo fundamentos da Lógica de Programação',100,2),(3,1,'Variáveis e Tipos de Dados: Armazenando informações','Aqui iremos aprender a definir variáveis e os tipos de dados no python',100,3),(4,1,'Operadores aritméticos e lógicos: Realizando cálculos e comparações','Aqui iremos aprender os operadores aritméticos e lógicos ',100,4),(5,1,' Estruturas de controle: Tomando decisões e repetindo ações','Aqui iremos aprender a controlar o fluxo de execução de um programa.',100,5),(6,3,'A História do JavaScript: Da Criação à Evolução','Nesta lição, exploraremos a trajetória do JavaScript, desde sua criação em 1995 por Brendan Eich, até seu papel fundamental no desenvolvimento web moderno.',100,1),(7,3,'Variáveis e Tipos de Dados','Nesta lição, iremos aprender a declarar variáveis usando \'var\', \'let\' e \'const\', além de explorar os principais tipos de dados no JavaScript',150,2),(8,3,'Estruturas de Controle: Tomando Decisões e Repetindo Ações','Nesta lição, iremos aprender sobre estruturas de controle em JavaScript, focando em como tomar decisões e repetir ações no código.',100,3),(9,4,'Funções','Aqui iremos aprender mais sobre as funcoes no javascript',100,1),(10,4,'Trabalhando com listas (arrays)','Nessa lição iremos abordar os conceitos de listas(arrays).',100,2);
/*!40000 ALTER TABLE `lessons` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `questions`
--

LOCK TABLES `questions` WRITE;
/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` VALUES (1,1,'Quem foi o criador do Python?',1),(2,1,'O que é python?',2),(3,1,'Em quais áreas o Python é amplamente utilizado?',3),(4,2,'O que são algoritmos?',1),(5,2,'O que o comando \'se\' (ou if) faz na programação?',2),(6,2,'O que o comando \'enquanto\' (ou while) faz na programação?',3),(7,3,'Qual das seguintes afirmações é verdadeira sobre variáveis?',1),(8,4,'Qual operador aritmético é usado para calcular o resto de uma divisão?',1),(9,4,'Qual operador lógico retorna verdadeiro apenas se ambos os operandos forem verdadeiros?',2),(10,5,'Qual estrutura de controle é usada para tomar decisões com base em condições?',1),(11,6,'Qual foi o nome original do JavaScript quando foi criado em 1995',1),(12,6,'Em qual área o JavaScript é amplamente utilizado?',2),(13,7,'Qual é a função principal das variáveis na programação?',1),(14,7,'Qual das seguintes opções não é um tipo de dado em JavaScript?',2),(15,7,'Qual palavra-chave é usada em JavaScript para declarar variáveis cujo valor não pode ser reatribuído?',3),(16,8,'Qual estrutura de controle é usada para executar código com base em uma condição?',1),(17,8,'Qual laço é mais adequado quando sabemos o número de vezes que o código precisa ser repetido?',2),(18,9,'O que uma função em JavaScript pode fazer?',1),(19,10,'O que um array em JavaScript pode armazenar?',1);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `units`
--

LOCK TABLES `units` WRITE;
/*!40000 ALTER TABLE `units` DISABLE KEYS */;
INSERT INTO `units` VALUES (1,1,'Unidade Básica de Python','Nesta unidade, vamos aprender os fundamentos da linguagem Python, como variáveis, tipos de dados e operadores',1000,1),(2,1,'Unidade de Python Intermediária','Aqui iremos ver conteudos como Listas, Tuplas, Manipulação de Strings etc...',1000,2),(3,2,'Unidade Básica de Javascript','Na unidade básica, veremos um pouco da história do JavaScript e alguns conceitos básicos.',1000,1),(4,2,'Unidade Intermediária de Javascript.','Na unidade Intermediária, exploraremos alguns conceitos mais avançados.',1000,2);
/*!40000 ALTER TABLE `units` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (1,'2024-10-01 16:12:57.839502','renansk18@outlook.com','2024-10-08 18:25:08.853814',1,'Renan Pollo','renan123',6300.00,'ADMIN'),(2,'2024-10-04 18:44:36.512058','gabriel@gmail.com','2024-10-05 21:33:24.737260',4,'Gabriel','gabriel123',0.00,'USER');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-10-08 22:11:17
